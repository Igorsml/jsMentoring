"use strict";

/* #1 Добавить функциям метод "f.defer(ms)"
Добавьте всем функциям в прототип метод defer(ms), который вызывает функции через ms миллисекунд.
После этого должен работать такой код: */

Function.prototype.defer = function (ms) {
  setTimeout(this, ms);
};

function f() {
  console.log("Hello!");
}
f.defer(1000); // выведет "Hello!" через 1 секунду

/* #2 Добавьте функциям декорирующий метод "defer()"
Добавьте всем функциям в прототип метод defer(ms), который возвращает обёртку, откладывающую вызов функции на ms миллисекунд.
Например, должно работать так: */

Function.prototype.defer = function (ms) {
  return (...args) => setTimeout(this, ms, ...args);
};

function f(a, b) {
  console.log(a + b);
}

f.defer(1000)(1, 2); // выведет 3 через 1 секунду.
// Пожалуйста, заметьте, что аргументы должны корректно передаваться оригинальной функции.
