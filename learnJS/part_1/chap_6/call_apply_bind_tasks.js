"use strict";
/* –§—É–Ω–∫—Ü–∏–∏ bind(), apply() –∏ call() —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏. –í —ç—Ç–æ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–∏ –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å –∑–∞–º–µ–Ω—è—Ç—å –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é –¥—Ä—É–≥–æ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–π bind().

–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–µ–¥–µ—Ç —Å–µ–±—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π bind(obj, fn). 
–ê—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏:
obj ‚Äì –æ–±—ä–µ–∫—Ç –≤—ã—Å—Ç—É–ø–∞—é—â–∏–π –≤ —Ä–æ–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
fn() ‚Äì —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º–∞—è –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É 
–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ–ª—å–∑—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π bind().*/

const obj = { number: 5 };

const fn = function fn(number) {
  return number + this.number;
};

function bind(context, fn) {
  return function (...args) {
    fn.apply(context, args);
  };
}

const fnWithContext = bind(obj, fn);

// –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç–æ–ª—å–∫–æ –∂–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Å–∫–æ–ª—å–∫–æ –∏ –∏—Å—Ö–æ–¥–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
console.log(fnWithContext(3)); // 8

// –ß—Ç–æ –±—É–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏?
// #1
const person = { name: "Igor" };

function sayHi(age) {
  console.log(`${this.name} is ${age}`);
}

sayHi.call(person, 30); // 'Igor is 30'
sayHi.bind(person, 30); // [Function: bound sayHi]
sayHi.bind(person, 30)(); // Igor is 30
// –í –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å this. –ù–æ .call –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –∂–µ!
// .bind –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–æ —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º. –û–Ω–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ.

// #2
var status = "üòé";

setTimeout(() => {
  const status = "üòç";

  const data = {
    status: "ü•ë",
    getStatus() {
      return this.status;
    },
  };

  console.log(data.getStatus()); // "ü•ë"
  console.log(data.getStatus.call(this));
}, 0); // "üòé" –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ call –º—ã –º–æ–∂–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Å—ã–ª–∞–µ—Ç—Å—è –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ this. –í —Ñ—É–Ω–∫—Ü–∏—è—Ö –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ this –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ–±—ä–µ–∫—Ç—É, –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—è. –ú—ã –æ–±—ä—è–≤–∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é setTimeout –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ global, –ø–æ—ç—Ç–æ–º—É –≤ —Ñ—É–Ω–∫—Ü–∏–∏ setTimeout –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ this —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç global. –í –≥–ª–æ–±–∞–ª—å–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∏–º–µ–Ω–µ–º status —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º "üòé". –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ this.status –≤—ã–≤–æ–¥–∏—Ç—Å—è "üòé".
